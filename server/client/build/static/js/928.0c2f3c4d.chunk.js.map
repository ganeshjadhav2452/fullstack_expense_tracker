{"version":3,"file":"static/js/928.0c2f3c4d.chunk.js","mappings":"yMA6DA,UApDA,WACE,IAAMA,GAAWC,EAAAA,EAAAA,MACjBC,GAA8BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAExBG,GAAWC,EAAAA,EAAAA,UAEXC,EAAa,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAC,IAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OASR,OARpBL,EAAEM,iBAEFnB,GAAW,GAGLc,EAAQT,EAASe,QAAQC,MAAKL,EAAAC,KAAA,EAGlCb,GAAa,GAAKY,EAAAE,KAAA,EACZzB,GAAS6B,EAAAA,EAAAA,IAA0BR,IAAO,OAChDV,GAAa,GAAMY,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAO,GAAAP,EAAA,SAEnBZ,GAAa,GACboB,QAAQC,IAAGT,EAAAO,IAAO,yBAAAP,EAAAU,OAAA,GAAAd,EAAA,mBAIrB,gBAlBkBe,GAAA,OAAAnB,EAAAoB,MAAA,KAAAC,UAAA,KAsBnB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACG5B,IAAa6B,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,KACvBH,EAAAA,EAAAA,MAAA,WAASI,UAAW,OAAOH,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAAD,SAAK,qBACLD,EAAAA,EAAAA,MAAA,QAAMK,SAAU5B,EAAcwB,SAAA,EAC5BD,EAAAA,EAAAA,MAAA,OAAKI,UAAW,UAAUH,SAAA,EACxBC,EAAAA,EAAAA,KAAA,SAAOI,QAAQ,QAAOL,SAAC,gBACvBC,EAAAA,EAAAA,KAAA,SAAOK,KAAK,QAAQC,GAAG,QAAQC,IAAKlC,EAAUmC,UAAQ,OAGvDzC,IAAWiC,EAAAA,EAAAA,KAAA,KAAGE,UAAU,cAAaH,SAAEhC,KACxCiC,EAAAA,EAAAA,KAAA,OAAKE,UAAW,UAAUH,UACxBC,EAAAA,EAAAA,KAAA,UAAQK,KAAK,SAAQN,SAAC,wBAQlC,C","sources":["components/auth/ForgotPassword.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./AuthPage.css\";\r\nimport LoaderEl from \"../UI/Loader/Loader\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { sendEmailForResetPassword } from \"../../redux/slices/authSlice\";\r\n\r\nfunction AuthPage() {\r\n  const dispatch = useDispatch()\r\n  const [isError, setIsError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const emailRef = useRef();\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    setIsError(false);\r\n\r\n\r\n    const email = emailRef.current.value;\r\n\r\n    try {\r\n      setIsLoading(true)\r\n      await dispatch(sendEmailForResetPassword(email))\r\n      setIsLoading(false)\r\n    } catch (error) {\r\n      setIsLoading(false)\r\n      console.log(error)\r\n    }\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      {isLoading && <LoaderEl />}\r\n      <section className={\"auth\"}>\r\n        <h1>{\"Forgot Password\"}</h1>\r\n        <form onSubmit={submitHandler}>\r\n          <div className={\"control\"}>\r\n            <label htmlFor=\"email\">Your Email</label>\r\n            <input type=\"email\" id=\"email\" ref={emailRef} required />\r\n          </div>\r\n\r\n          {isError && <p className=\"text-danger\">{isError}</p>}\r\n          <div className={\"actions\"}>\r\n            <button type=\"submit\">Send Mail</button>\r\n\r\n\r\n          </div>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AuthPage;"],"names":["dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","isError","setIsError","_useState3","_useState4","isLoading","setIsLoading","emailRef","useRef","submitHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","email","wrap","_context","prev","next","preventDefault","current","value","sendEmailForResetPassword","t0","console","log","stop","_x","apply","arguments","_jsxs","children","_jsx","LoaderEl","className","onSubmit","htmlFor","type","id","ref","required"],"sourceRoot":""}