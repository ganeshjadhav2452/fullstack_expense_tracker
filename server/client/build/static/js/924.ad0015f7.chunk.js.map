{"version":3,"file":"static/js/924.ad0015f7.chunk.js","mappings":"mNAoEA,UA7DA,WACI,IAAMA,GAAWC,EAAAA,EAAAA,MACnBC,GAA8BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAExBG,IADWC,EAAAA,EAAAA,OACDC,EAAAA,EAAAA,WACVC,GAAWD,EAAAA,EAAAA,UACRE,GAAQC,EAAAA,EAAAA,MAARD,KAEHE,EAAa,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAC,IAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAWF,OAV1BN,EAAEO,iBAEFxB,GAAW,GAGLkB,EAAWb,EAAQoB,QAAQC,MAC3BP,EAAQX,EAASiB,QAAQC,MAAKL,EAAAC,KAAA,EAI5BlB,GAAa,GAAKiB,EAAAE,KAAA,EAEd9B,GAASkC,EAAAA,EAAAA,IAAqBR,EAAMD,EAAST,IAAM,OACxDL,GAAa,GAAMiB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAO,GAAAP,EAAA,SAElBjB,GAAa,GACdyB,QAAQC,IAAGT,EAAAO,IAAO,yBAAAP,EAAAU,OAAA,GAAAf,EAAA,mBAI1B,gBArBkBgB,GAAA,OAAApB,EAAAqB,MAAA,KAAAC,UAAA,KAyBnB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACGjC,IAAakC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,KACvBH,EAAAA,EAAAA,MAAA,WAASI,UAAW,OAAOH,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAAD,SAAO,qBACPD,EAAAA,EAAAA,MAAA,QAAMK,SAAU7B,EAAcyB,SAAA,EAC9BD,EAAAA,EAAAA,MAAA,OAAKI,UAAW,UAAUH,SAAA,EACtBC,EAAAA,EAAAA,KAAA,SAAOI,QAAQ,QAAOL,SAAC,2BACvBC,EAAAA,EAAAA,KAAA,SAAOK,KAAK,QAAQC,GAAG,QAAQC,IAAKpC,EAAUqC,UAAQ,QAExDV,EAAAA,EAAAA,MAAA,OAAKI,UAAW,UAAUH,SAAA,EACxBC,EAAAA,EAAAA,KAAA,SAAOI,QAAQ,SAAQL,SAAC,uBACxBC,EAAAA,EAAAA,KAAA,SAAOK,KAAK,SAASC,GAAG,SAASC,IAAKvC,EAASwC,UAAQ,OAGxD9C,IAAWsC,EAAAA,EAAAA,KAAA,KAAGE,UAAU,cAAaH,SAAErC,KACxCsC,EAAAA,EAAAA,KAAA,OAAKE,UAAW,UAAUH,UACxBC,EAAAA,EAAAA,KAAA,UAAQK,KAAK,SAAQN,SAAC,8BAQlC,C","sources":["components/auth/EnterNewPassword.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport \"./AuthPage.css\";\r\nimport LoaderEl  from \"../UI/Loader/Loader\";\r\nimport { useNavigate ,useParams} from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { resetpasswordApicall } from \"../../redux/slices/authSlice\";\r\n\r\nfunction EnterNewPassword() {\r\n    const dispatch = useDispatch()\r\n  const [isError, setIsError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const passRef = useRef();\r\n  const emailRef = useRef();\r\n    const {uuid} = useParams()\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    setIsError(false);\r\n\r\n  \r\n    const password = passRef.current.value;\r\n    const email = emailRef.current.value;\r\n   \r\n        try {\r\n         \r\n            setIsLoading(true)\r\n         \r\n         await  dispatch(resetpasswordApicall(email,password,uuid)) \r\n           setIsLoading(false)\r\n        } catch (error) {\r\n            setIsLoading(false)\r\n           console.log(error) \r\n        }\r\n        \r\n  \r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      {isLoading && <LoaderEl />}\r\n      <section className={\"auth\"}>\r\n        <h1>{  \"Forgot Password\" }</h1>\r\n        <form onSubmit={submitHandler}>\r\n        <div className={\"control\"}>\r\n            <label htmlFor=\"email\">Your registered Email</label>\r\n            <input type=\"email\" id=\"email\" ref={emailRef} required />\r\n          </div>\r\n          <div className={\"control\"}>\r\n            <label htmlFor=\"number\">Your New Password</label>\r\n            <input type=\"number\" id=\"number\" ref={passRef} required />\r\n          </div>\r\n       \r\n          {isError && <p className=\"text-danger\">{isError}</p>}\r\n          <div className={\"actions\"}>\r\n            <button type=\"submit\">update password</button>\r\n           \r\n           \r\n          </div>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EnterNewPassword;"],"names":["dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","isError","setIsError","_useState3","_useState4","isLoading","setIsLoading","passRef","useNavigate","useRef","emailRef","uuid","useParams","submitHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","password","email","wrap","_context","prev","next","preventDefault","current","value","resetpasswordApicall","t0","console","log","stop","_x","apply","arguments","_jsxs","children","_jsx","LoaderEl","className","onSubmit","htmlFor","type","id","ref","required"],"sourceRoot":""}